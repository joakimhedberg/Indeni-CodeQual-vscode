'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.RULE_PARAMETER_DOCUMENTATION = {
    'alert_description': ['Usage: The description of the alert', 'Type: String', 'alert_description: "Some memory elements are nearing their maximum capacity."'],
    'alert_description_format': ['Usage: A formatting string, with %f-type placeholders, into which certain values (template-dependent) are put to produce the alert description', 'Type: String', 'alert_description_format: "There are %.0f real servers defined where the limit is %.0f."'],
    'alert_description_value_units': ['Usage: The time-unit used to convert the value from a time-delta to a number before embedding it into the alert description format', 'Type: String, one of MILLISECOND/SECOND/MINUTE/HOUR/DAY/WEEK', 'alert_description_value_units: SECOND'],
    'alert_if_down': ['Usage: If set to true, rule will alert if down, i.e. will look for state == 0.0. If set to false, rule will alert if not down, i.e. will look for state == 1.0', 'Type: Boolean', 'alert_if_down: false'],
    'alert_info_metric_tag': ['Usage: An alternative to applicableMetricTag for use in the description of the alert items', 'Type: String', 'alert_info_metric_tag: alert-item-port-speed'],
    'alert_item_description_format': ['Usage: A formatting string, with %f-type placeholders, into which certain values (template-dependent) are put to produce the alert item description', 'Type: String', 'alert_item_description_format: "%.0f packets per second."'],
    'alert_item_description_units': ['Usage: The time-unit used to convert the value from a time-delta to a number before embedding it into the alert item description format', 'Type: String, one of MILLISECOND/SECOND/MINUTE/HOUR/DAY/WEEK', 'alert_item_description_units: SECOND'],
    'alert_item_headline_str_metric': ['Usage: The name of a complex string metric used for the alert item headline', 'Type: String', 'alert_item_headline_str_metric: isp-link-status'],
    'alert_items_header': ['Usage: The header/title of the alert items', 'Type: String', 'alert_items_header: "ISP Links Affected"'],
    'alert_remediation_steps': ['Usage: Same as base_remediation_text. This is named differently in different templates for historical reasons.', 'alert_remediation_steps: "Packet drops usually occur when the rate of packets transmitted is higher than the device ability to handle. Admin might need to provision a higher speed port (1G -> 10G -> 40G -> 100G)."'],
    'applicable_metric_tag': ['Usage: Differs between templates. Often used in the the headline/description of the alert item. When combined with items_to_ignore, the items to ignore are searched for in the value of the metric tag denoted by applicable_metric_tag. There may be other different uses', 'Type: String', 'applicable_metric_tag: name'],
    'base_remediation_text': ['Usage: Base text for remediation steps. Additional vendor-specific texts will be appended to it', 'Type: String', 'base_remediation_text: "Ensure a valid policy is installed."'],
    'complex_condition': ['Usage: A condition used as the metric condition for the rule, some times in combination with other conditions that are built in to the template. The syntax here is complex, and it is a similar syntax to the syntax used in the phase 2 templates which are work in progress. The syntax here also might change in the future when new features are added.', 'We\'ll give examples of conditions, assuming m1, m2, m3 are metric names:', 'StrMetric(m1) == "an interesting string value"', 'StrMetric(m1) in ["value1", "value2", "value3"]', 'DoubleMetric(m2) == 17.0', 'DoubleMetric(m2) < 100', 'Also available are the operators: <=, >, >=, !=, <> ( != and <> are synonymous)', 'ObjArrayMetric(m3) contains "an interesting string value" atKey "keyName"', 'ObjArrayMetric(m3) isEmpty', 'Note that capitalization is important throughout this conditions language', 'These basic conditions can be combined with the operators AND, OR, NOT, and parenthesis can be used to control precedence e.g.:', 'StrMetric(m1) == "an interesting string value" AND NOT DoubleMetric(m2) == 17.0 OR (DoubleMetric(m2) >= 100 AND NOT (ObjArrayMetric(m3) contains "an interesting string value" atKey "keyName"))', 'The default precedence is: NOT is highest precedence, then AND, and OR is with lowest precedence among these three logical operators.', 'Examples from current yamls:', 'complex_condition: "not(StrMetric(isp-link-status) == \"OK\")"', 'complex_condition: "ObjArrayMetric(communities) contains \"public\" atKey \"community\""', 'complex_condition: "not (ObjArrayMetric(ipassignment-conf-errors) isEmpty)"', 'complex_condition: "not(StrMetric(securexl-status) in [\"on\", \"waiting for policy load\", \"enabled\"])"'],
    'description_metric_tag': ['Usage: A metric tag to be used in the alert item description', 'Type: String', 'description_metric_tag: vs.name'],
    'description_string_format': ['Usage: This field is for power-users only and has the same structure as in Scala template-based rules', 'Type: String', 'description_string_format: "Part of ${scope(\"bond-name\")}"'],
    'device_category': ['Usage: A category for the devices this rule is applied to', 'Type: String', 'values: AllDevicesNonVSX, AllDevicesVSX, AllDevices, BlueCoatDevices, ChassisDevices, CheckPointVSX, CheckPointClusterNonVSX, CheckPointClusterVSX, CheckPointCluster, CheckPointClusterXLNonVSX, CheckPointClusterXLVSX, CheckPointClusterXL, CheckPointDevices, CheckPointFirewallsNonVSX, CheckPointFirewallsVSX, CheckPointFirewalls, CiscoDevices, CiscoNexus, ClusteredDevicesNonVS, ClusteredDevicesVS, ClusteredDevices, ComplianceCheck, DevicesWithVS, DevicesWithMultiplePSU, F5ComplianceCheck, F5DevicesVCMP, F5Devices, FirewallDevices, FortinetDevices, LinuxbasedDevices, LoadBalancers, ManagementDevices, PaloAltoNetworksFirewalls, PaloAltoNetworksDevices ,PaloAltoNetworks, RadwareAlteon ,RadwareDevice, SwitchingDevices', 'device_category: CheckPointClusterXLVSX'],
    'disable_global_rule_set': ['Usage: Disables the global rule configuration for this rule, currently defaults to true', 'Type: Boolean', 'disable_global_rule_set: false'],
    'expected_value': ['Usage: Default value for the parameter that will be defined for this rule', 'Type: Any primitive type, i.e. string/boolean/number', 'expected_value: true'],
    'headline_format': ['Usage: A formatting string containing %f-like placeholders, into which certain values (template-dependent) are put to generate the alert headline', 'Type: String', 'headline_format: "%s has the following status: %s"'],
    'history_length': ['Usage: Used only in StateDown template to control the length of the history examined', 'Type: integer', 'history_length: 2'],
    'include_snapshot_diff': ['Usage: Produces in the alert item text the delta between the two snapshot metrics', 'include_snapshot_diff: true'],
    'is_array': ['Usage: True whether the supplied metric is a ObjArray metric, false if it is a String metric', 'Type: Boolean', 'is_array: true'],
    'item_key': ['Usage: The key in the objects stored in the obj array metric', 'Type: String', 'item_key: ip'],
    'item_specific_description': ['Usage: A list of pairs regex and text. The regex\'s are checked one by one to see if they partially match the applicable metric tag value. The second item of the first pair that matches is used as the alert description. Note that the regex for the last pair should always be a "catch-all" regex to avoid unexpected errors in running this rule.', '    item_specific_description', '    -', '        - "(?i).*FIB.*"', '        - "The FIB device is responsible for supporting dynamic routing under ClusterXL. Review the firewall logs to ensure traffic with the FIBMGR service is flowing correctly."', '    - # Catch-all', '        - ".*"', '        - "Please consult with your technical support provider about this pnote."'],
    'items_to_ignore': ['Usage: A list of regexps for which'],
    'limit_metric_name': ['Usage: The name of the metric to evaluate to compare it to the threshold', 'Type: String', 'limit_metric_name: arp-limit'],
    'meta_condition': ['Usage: A condition used as the tags condition for the rule. The syntax here is complex, and it is a similar syntax to the syntax used in the phase 2 templates which are work in progress.', 'Type: String', 'meta_condition: "Tag(vsx) == \"true\""', 'meta_condition: "Tag(vsx) != \"true\""'],
    'metric_name': ['Usage: The name of the metric. Template-dependent', 'Type: String', 'metric_name: isp-link-status'],
    'metric_units': ['Usage: Used to convert a double metric to a time-span value', 'Type: String', 'values: MILLISECOND, SECOND, MINUTE, HOUR, DAY, WEEK', 'metric_units: MILLISECOND'],
    'minimum_value_to_alert': ['Usage: Acts as a lower threshold for alerting', 'Type: Double', 'minimum_value_to_alert: 100.0'],
    'os_name': ['Usage: Used in SecurityVulnerabilityChecks template for name of os', 'Type: String', 'os_name: panos'],
    'parameter_description': ['Usage: The description of the user-controlled parameter that will be defined for this rule', 'Type: String', 'parameter_description: "If this is set to \"on\" or ticked, Indeni will alert when a device that supports node monitoring does not have it configured."'],
    'parameter_name': ['Usage: The name of the user-controlled parameter that will be defined for this rule', 'Type: String', 'parameter_name: "Should Default Node Monitors Be Configured"'],
    'pool_name': ['Usage: Used only in DataplanePoolUsage template to denote the name of the pool', 'Type: string', 'pool_name: "SSH State"'],
    'required_items_parameter_description': ['Usage: Same as parameter_description', 'required_items_parameter_description: "Enter the DNS servers required, each one on its own line."'],
    'required_items_parameter_name': ['Usage: Same as parameter_name', 'required_items_parameter_name: "DNS Servers"'],
    'rule_categories': ['Usage: The set of rule categories for this rule', 'Type: List of String. The list must contain no duplicates. Each item on the list must be one of', 'values: HighAvailability, HealthChecks, CustomerBestPractices, VendorBestPractices, RegulatoryCompliance, OngoingMaintenance, SecurityRisk', 'rule_categories', '  - CustomerBestPractices'],
    'rule_description': ['Usage: The description for this rule', 'Type: String', 'rule_description: "Sometimes the routes that are defined in the Check Point Web UI or through clish may not be fully applied to the operating system layer. If this happens, Indeni will alert."'],
    'rule_friendly_name': ['Usage: A friendly, name i.e. readable by users, for this rule', 'Type: String', 'rule_friendly_name: "Check Point Firewalls (VSX) Routes defined in clish/webUI are missing"'],
    'rule_name': ['Usage: The name of this rule', 'Type: String', 'rule_name: chkp_firewall_routes_missing_vsx'],
    'samples_time_difference_threshold': ['Usage: Used only in SnapshotComparison template to denote a threshold of time difference, to trigger the rule', 'Type: String denoting time duration', 'samples_time_difference_threshold: "5 minutes"'],
    'severity': ['Usage: The severity of the alert issued by this rule', 'Type: String, one of', 'values: INFO, WARN, ERROR, CRITICAL', 'severity: ERROR'],
    'should_use_device_passive_and_passive_link_state_condition': ['Usage: Esed in templates that have a deviceCondition in their scala version, namely SnapshotComparison and StateDown templates. When set to true, a deviceCondition will be created equivalent to what was generateDevicePassiveAndPassiveLinkStateCondition(context.tsDao) in the scala rules. If set to false, the default deviceCondition (always True) is used', 'Type: Boolean', 'should_use_device_passive_and_passive_link_state_condition: true'],
    'should_use_history_contains_state_down_condition': ['Usage: Esed only in StateDown template. If set to true, creates a generateStateDownCondition equivalent to Contains(LastNNonEmptyValues(tsToTestAgainst, historyLength), stateToLookFor) in the scala rules. If set to false, the default generateStateDownCondition is EndsWithRepetition(tsToTestAgainst, stateToLookFor, historyLength, true)', 'Type: Boolean', 'should_use_history_contains_state_down_condition: true'],
    'snapshot_item_key': ['Usage: The key in the object array metric a.k.a. snapshot item', 'Type: String', 'snapshot_item_key: category'],
    'snapshot_item_list': ['Usage: Default value for the items_to_look_for parameter generated by the rule', 'Type: List of strings.', 'snapshot_item_list', '  - command-and-control', '  - copyright-infringement', '  - dynamic-dns', '  - extremism', '  - malware', '  - phishing', '  - proxy-avoidance-and-anonymizers', '  - unknown', '  - parked'],
    'state_description_complex_metric_name': ['Usage: Only used in StateDown template. A complex metric whose value is used in alert items', 'Type: String', 'state_description_complex_metric_name: "mgmt-ha-sync-state-description"'],
    'threshold': ['Usage: A threshold value, sometimes of type double and sometimes of type time interval, depending on the metric', 'Type: Double for NumericThresholdOnComplexMetricWithItems, NumericThresholdOnDoubleMetricWithItems, NearingCapacityWithItems, NearingCapacity, NumericThresholdOnDoubleMetric and time-interval on timeIntevalThresholdOnDoubleMetric, TimeThresholdOnDoubleMetricWithItems', 'For double type', '  threshold: 1800.0', 'For time-interval type', '  threshold: "3650 days"'],
    'threshold_direction': ['Usage: Whether to compare against the threshold from above or from below. When the value of threshold_direction is ABOVE, an alert is issued if metricValue >= thresholdValue and when the value of threshold_direction is BELOW, an alert is issued if metricValue < thresholdValue', 'Type: String, one of', 'values: ABOVE, BELOW', 'threshold_direction: ABOVE'],
    'unit_converter_double_value': ['Usage: A double value the metric value is divided by to yield the alert text. If not provided, it defaults to 1.0.', 'Type: Double', 'unit_converter_double_value: 100.0'],
    'usage_metric_name': ['Usage: The metric to check the value of, and compare it to a certain percentage of the limit value, in NearingCapacity* templates.', 'Type: String', 'usage_metric_name: memory-usage'],
    'usage_threshold': ['Usage: Used only in DataplanePoolUsage template, to denote threshold', 'Type: Double', 'usage_threshold: 80.0'],
    'vendor_severity_rating': ['Usage: Used as part of the alert description', 'Type: String', 'TBD when this field will be used'],
    'vendor_to_remediation_text': ['Usage: A map between vendor and a string with remediation text for this alert suitable for that vendor', 'Type: Map from vendor to string', 'vendor_to_remediation_text', '  OS_NXOS', ' |', '    1. Run the "show interface" command to review the interface error counters and the bitrate. Consider to configure the "load-interval 30" interface sub command to improve the accuracy of the interface measurements.', '    2. Check for a mismatch in the speed and duplex interface settings on two sides of a cable, or for a damaged cable.', '    3. Use the "show interface counters errors" NX-OS command to display detailed interface error counters. If you do not specify an interface, this command displays information about all Layer 2 interfaces.', '  VENDOR_JUNIPER', ' |', '    1. Run the "show interface extensive" command to review the interface error counters.', '    2. Check for a mismatch in the speed and duplex interface settings on the both sides.', '    3. Check the physical cable. It might be damaged or incorrect type is used.', '    4. Review the following article on Juniper tech support site', ' <a target="_blank" href="https://www.juniper.net/documentation/en_US/junos/topics/reference/command-summary/show-interfaces-security.html#jd0e1772">Operational Commands</a>', '    5. If the problem persists, contact the Juniper Networks Technical Assistance Center (JTAC)', '  VENDOR_FORTINET', ' |', '    1. Run "diag hardware deviceinfo nic <interface>" command to display a list of hardware related error names and values. Review  the next link for more details', ' http://help.fortinet.com/fos50hlp/54/Content/FortiOS/fortigate-toubleshooting-54/troubleshooting_tools.htm', '    2. Run command "fnsysctl cat /proc/net/dev" to get a summary of the interface statistics.', '    3. Check for speed and duplex mismatch in the interface settings on both sides of a c']
};
//# sourceMappingURL=rule_parameters.js.map